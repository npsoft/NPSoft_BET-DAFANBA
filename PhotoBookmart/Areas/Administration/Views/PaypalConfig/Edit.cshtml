@model PayPalStandardPaymentSettings
@{  
    ViewBag.Title = "Paypal SDK Config";
}
<script type="text/javascript">
    jQuery(document).ready(function () {
        $(".float-than-or-equal-zero").spinner({
            min: 0.00,
            step: 0.01,
            numberFormat: "n"
        });

        jQuery("#UserForm").submit(function () {

            show_loading();
            return true;
        });
    });
</script>
<div class="head">
    <h3>
        @ViewBag.Title
    </h3>
</div>
<div class="mws-panel grid_8">
    <div class="mws-panel-header">
        <span>@ViewBag.Title</span>
    </div>
    <div class="mws-panel-body no-padding">
        @using (Html.BeginForm("Update", "PaypalConfig", FormMethod.Post, new { enctype = "multipart/form-data", @id = "UserForm", @class = "mws-form" }))
        {
            @Html.HiddenFor(m => m.Id)  
            <div class="mws-form-inline">
                <div class="mws-form-row">
                    <h4>Paypal Config</h4>
                </div>
                <div class="mws-form-row">
                    <label class="mws-form-label">
                        Use Sandbox</label>
                    <div class="mws-form-item">
                        <input class="ibutton" name="UseSandbox" id="UseSandbox"  value="true" type="checkbox" data-label-on="Yes" data-label-off="No" @if (Model.UseSandbox)
                                                                                                                                                       {<text>checked="checked"</text>}>
                        <br />
                        <span>Sandbox is for development only</span>
                    </div>
                </div>
                <div class="mws-form-row">
                    <label class="mws-form-label">
                        BusinessEmail</label>
                    <div class="mws-form-item">
                        @Html.TextBoxFor(model => Model.BusinessEmail, new { @class = "large" })
                    </div>
                </div>
                <div class="mws-form-row">
                    <label class="mws-form-label">
                        PDT Token</label>
                    <div class="mws-form-item">
                        @Html.TextBoxFor(model => Model.PdtToken, new { @class = "large" })
                    </div>
                </div>
                <div class="mws-form-row">
                    <label class="mws-form-label">
                        Additional Fee Type</label>
                    <div class="mws-form-item">
                        <input class="ibutton" name="AdditionalFeePercentage" id="AdditionalFeePercentage"  value="true" type="checkbox" data-label-on="Percentage" data-label-off="Fixed Amount" @if (Model.AdditionalFeePercentage)
                                                                                                                                                                                                  {<text>checked="checked"</text>}>
                        <br />
                    </div>
                </div>
                <div class="mws-form-row">
                    <label class="mws-form-label">
                        Additional Fee</label>
                    <div class="mws-form-item">
                        @Html.TextBoxFor(model => Model.AdditionalFee, new { @class = "mws-spinner-decimal float-than-or-equal-zero large" })
                    </div>
                </div>
                <div class="mws-form-row">
                    <label class="mws-form-label">
                        Pass Product Names And Totals</label>
                    <div class="mws-form-item">
                        <input class="ibutton" name="PassProductNamesAndTotals" id="PassProductNamesAndTotals"  value="true" type="checkbox" data-label-on="Yes" data-label-off="No" @if (Model.PassProductNamesAndTotals)
                                                                                                                                                                                     {<text>checked="checked"</text>}>
                    </div>
                </div>
                <div class="mws-form-row">
                    <label class="mws-form-label">
                        Pdt Validate Order Total</label>
                    <div class="mws-form-item">
                        <input class="ibutton" name="PdtValidateOrderTotal" id="PdtValidateOrderTotal"  value="true" type="checkbox" data-label-on="Yes" data-label-off="No" @if (Model.PdtValidateOrderTotal)
                                                                                                                                                                             {<text>checked="checked"</text>}>
                    </div>
                </div>
                <div class="mws-form-row">
                    <label class="mws-form-label">
                        Enable IPN</label>
                    <div class="mws-form-item">
                        <input class="ibutton" name="EnableIpn" id="EnableIpn"  value="true" type="checkbox" data-label-on="Yes" data-label-off="No" @if (Model.EnableIpn)
                                                                                                                                                     {<text>checked="checked"</text>}>
                        <br />
                        <span>IPN is instance notification from Paypal</span>
                    </div>
                </div>
                <div class="mws-form-row">
                    <label class="mws-form-label">
                        IPN URL</label>
                    <div class="mws-form-item">
                        @Html.TextBoxFor(model => Model.IpnUrl, new { @class = "large" })
                    </div>
                </div>
                @*<div class="mws-form-row">
                    <label class="mws-form-label">
                        Invoice Currency</label>
                    <div class="mws-form-item">
                        <select name="InvoiceCurrency" class="large">
                            <option value="SGD" @if (Model.InvoiceCurrency == "SGD")
                                                {<text>selected</text>}>SGD</option>
                            <option value="MYR" @if (Model.InvoiceCurrency == "MYR")
                                                {<text>selected</text>}>MYR</option>
                            <option value="USD" @if (Model.InvoiceCurrency == "USD")
                                                {<text>selected </text>}>USD</option>
                        </select>
                        <span>According to your Merchant Paypal account, select the correct Currency.<br />In real system, please select MYR</span>
                    </div>
                </div>*@
                <div class="mws-form-row">
                    <h4>iPay88 Config</h4>
                </div>
                 <div class="mws-form-row">
                    <label class="mws-form-label">
                        Merchant Code</label>
                    <div class="mws-form-item">
                        @Html.TextBoxFor(model => Model.iPay88_MerchantCode, new { @class = "large" })
                    </div>
                </div>
                 <div class="mws-form-row">
                    <label class="mws-form-label">
                        Merchant Key</label>
                    <div class="mws-form-item">
                        @Html.TextBoxFor(model => Model.iPay88_MerchantKey, new { @class = "large" })
                    </div>
                </div>                         
            </div>
            <div class="mws-button-row">
                <input type="submit" value="Submit" class="btn btn-danger">
                <input type="reset" value="Reset" class="btn ">
            </div>
        }
    </div>
</div>
