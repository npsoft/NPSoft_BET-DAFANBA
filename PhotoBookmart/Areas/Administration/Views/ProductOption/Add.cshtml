@model Product_Option
@{  
    if (Model.Id > 0)
    {
        ViewBag.Title = "Edit product option - " + Model.Name + " / " + Model.Code;
    }
    else
    {
        ViewBag.Title = "Add product option";
    }
}
<script type="text/javascript">
    jQuery(document).ready(function () {
        $(".integer-than-or-equal-zero").spinner({
            min: 0,
            step: 1,
            numberFormat: "n"
        });

        $(".float-than-or-equal-zero").spinner({
            min: 0.00,
            step: 0.01,
            numberFormat: "n"
        });

        CKEDITOR.replace('ckeditorId', {
            filebrowserImageUploadUrl: '@Url.Action("UploadImage", "Management")',
            height: "300"
        });

        jQuery("#UserForm").submit(function () {
            jQuery("#ckeditorId").val(CKEDITOR.instances.ckeditorId.getData());

            if (jQuery("#Name").val() == "") {
                alert("Please enter field >> Name");
                jQuery("#Name").focus();
                return false;
            }

            show_loading();
            return true;
        });
    });
</script>
<div class="head">
    <h3>
        @ViewBag.Title
    </h3>
    <div>
        <a type="button" class="btn" href="@Url.Action("Index")" ><i class="icol-arrow-left">
        </i>Product Options Management</a>
    </div>
</div>
<div class="mws-panel grid_8">
    <div class="mws-panel-header">
        <span>@ViewBag.Title</span>
    </div>
    <div class="mws-panel-body no-padding">
        @using (Html.BeginForm("Update", "ProductOption", FormMethod.Post, new { enctype = "multipart/form-data", @id = "UserForm", @class = "mws-form" }))
        {
            @Html.HiddenFor(m => m.Id);
            <div class="mws-form-inline">
                <div class="mws-form-row">
                    <label class="mws-form-label">
                        Name</label>
                    <div class="mws-form-item">
                        @Html.TextBoxFor(model => Model.Name, new { @class = "large" })
                    </div>
                </div>
                <div class="mws-form-row">
                    <label class="mws-form-label">
                        Internal Name</label>
                    <div class="mws-form-item">
                        @Html.TextBoxFor(model => Model.InternalName, new { @class = "large" })
                        <span>This name will be used within Administration Panel for you easy understand the options</span>
                        <span>Leave blank to let system use same value with Name</span>
                    </div>
                </div>
                <div class="mws-form-row">
                    <label class="mws-form-label">Thumbnail</label>
                    <div class="mws-form-item">
                        <input type="file" name="FileUp" />
                    </div>
                </div>
                <div class="mws-form-row">
                    <label class="mws-form-label">
                        UnitName</label>
                    <div class="mws-form-item">
                        @Html.TextBoxFor(model => Model.UnitName, new { @class = "large" })
                    </div>
                </div>
                <div class="mws-form-row">
                    <label class="mws-form-label">
                       Weight (gram)</label>
                    <div class="mws-form-item">
                        @Html.TextBoxFor(model => Model.Weight, new { @class = "mws-spinner-decimal float-than-or-equal-zero large" })
                    </div>
                </div>
                <div class="mws-form-row">
                    <label class="mws-form-label">
                        Description</label>
                    <div class="mws-form-item">
                        @Html.TextAreaFor(m => m.Desc, new { @class = "large", @id = "ckeditorId" })
                    </div>
                </div>
                <div class="mws-form-row">
                    <label class="mws-form-label">
                        Is Active</label>
                    <div class="mws-form-item">
                        <input class="ibutton" name="Status" value="true" type="checkbox" data-label-on="Enable" data-label-off="Disable" @if (Model.Status)
                                                                                                                                          {<text>checked="checked"</text>}>
                    </div>
                </div>
            </div>
            <div class="mws-button-row">
                <input type="submit" value="Submit" class="btn btn-danger">
                <input type="reset" value="Reset" class="btn ">
            </div>
        }
    </div>
</div>
